@page "/personnel/{id:int}"
@inject HttpClient Http

<PageTitle>Personnel Details</PageTitle>


<div>
	<img src="@personnel.Image" />
</div>
<div>
	<strong>Name: </strong>
	@personnel.FirstName @personnel.LastName
</div>
<div>
	<strong>Title:</strong>
	@personnel.Title
</div>
<div>
	<strong>Is Active:</strong>
	@personnel.Active
</div>
<div>
	<a href="@personnel.DetailsUrl">View Details</a>
</div>
@*<button ng-click="personnelDirectory.editPersonnel(personnelDirectory.personnel)">Edit</button>*@

@*<h3>PersonnelDetailsrazor</h3>


<table>
	<thead>
		<tr>
			<th></th>
			<th>Name</th>
			<th>Title</th>
		</tr>
	</thead>
	<tbody>
		<tr ng-repeat="personnel in personnelDirectory.personnelList">
			<td><img ng-src="{{personnel.image}}" class="thumbnail" /></td>
			<td><a ng-href="#/personnel/{{personnel.id}}">{{personnel.firstName}} {{personnel.lastName}}</a></td>
			<td>{{personnel.title}}</td>
		</tr>
	</tbody>
</table>*@

@code {
	[Parameter]
    public int? Id { get; set; }

	private Personnel? personnel;

    protected override async Task OnInitializedAsync()
    {
		var settings = await Http.GetFromJsonAsync<Settings>("settings.json");
	   string apiUrl = settings.Api;

       var personnelList = await Http.GetFromJsonAsync<Personnel[]>($"{apiUrl}/GetPersonnel");
	   personnel = personnelList.First(p=>p.Id == Id);
    }
}
